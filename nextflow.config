/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    icgc-argo-workflows/dnaalnqc Nextflow config file
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Default config options for all compute environments
----------------------------------------------------------------------------------------
*/

// Global default params, used in configs
params {

    // TODO nf-core: Specify your pipeline's command line flags
    // Input options
    input                      = null
    local_mode                 = false
    study_id                   = "TEST-QA"
    analysis_id                = "0187b82f-1693-470a-87b8-2f1693f70ac9"
    qc_analysis_ids            = null

    // Main options
    bait_interval              = null
    target_interval            = null

    // Reference options
    fasta                      = '/Users/lxiang/Projects/icgc-argo/reference/GRCh38_hla_decoy_ebv.fa'
    fasta_fai                  = '/Users/lxiang/Projects/icgc-argo/reference/GRCh38_hla_decoy_ebv.fa.fai'
    fasta_dict                 = '/Users/lxiang/Projects/icgc-argo/reference/GRCh38_hla_decoy_ebv.fa.dict'

    // rdpc data staging 
    tempdir                    = null
    api_token                  = null
    song_url                   = null
    score_url                  = null
    song_url_download          = null
    score_url_download         = null
    song_url_upload            = null
    score_url_upload           = null
    transport_parallel         = null
    transport_mem              = null
    song_container             = null
    song_container_version     = null
    score_container            = null
    score_container_version    = null

    // Boilerplate options
    outdir                     = null
    tracedir                   = params.outdir ? "${params.outdir}/pipeline_info" : null
    publish_dir_mode           = 'copy'
    email                      = null
    email_on_fail              = null
    plaintext_email            = false
    monochrome_logs            = false
    hook_url                   = null
    help                       = false
    version                    = false
    validate_params            = true
    show_hidden_params         = false
    schema_ignore_params       = 'genomes'

    // Max resource options
    // Defaults only, expecting to be overwritten
    max_memory                 = '128.GB'
    max_cpus                   = 16
    max_time                   = '240.h'

   // MultiQC options
    multiqc_config             = null
    multiqc_title              = null
    multiqc_logo               = null
    max_multiqc_email_size     = '25.MB'
    multiqc_methods_description = null

}

// Load base.config by default for all pipelines
includeConfig 'conf/base.config'

docker {
    enabled         = true
    registry        = 'quay.io'
    userEmulation   = true
    runOptions      = '-u \$(id -u):\$(id -g)'
}

profiles {
    test            { includeConfig 'conf/test.config'      }
    test_full       { includeConfig 'conf/test_full.config' }
    debug_qa        { includeConfig 'conf/debug_qa.config'  }
    debug_dev       { includeConfig 'conf/debug_dev.config'  }
    rdpc            { includeConfig 'conf/rdpc.config'  }
}



// Export these variables to prevent local Python/R libraries from conflicting with those in the container
// The JULIA depot path has been adjusted to a fixed path `/usr/local/share/julia` that needs to be used for packages in the container.
// See https://apeltzer.github.io/post/03-julia-lang-nextflow/ for details on that. Once we have a common agreement on where to keep Julia packages, this is adjustable.

env {
    PYTHONNOUSERSITE = 1
    R_PROFILE_USER   = "/.Rprofile"
    R_ENVIRON_USER   = "/.Renviron"
    JULIA_DEPOT_PATH = "/usr/local/share/julia"
}

// Enable locally defined binary scripts for modules
nextflow.enable.moduleBinaries = true

// Capture exit codes from upstream processes when piping
process.shell = ['/bin/bash', '-euo', 'pipefail']

def trace_timestamp = new java.util.Date().format( 'yyyy-MM-dd_HH-mm-ss')
timeline {
    enabled = true
    file    = "${params.tracedir}/execution_timeline_${trace_timestamp}.html"
}
report {
    enabled = true
    file    = "${params.tracedir}/execution_report_${trace_timestamp}.html"
}
trace {
    enabled = true
    file    = "${params.tracedir}/execution_trace_${trace_timestamp}.txt"
}
dag {
    enabled = true
    file    = "${params.tracedir}/pipeline_dag_${trace_timestamp}.html"
}

manifest {
    name            = 'DNA Alignment QC'
    author          = """Linda Xiang"""
    homePage        = 'https://github.com/icgc-argo-workflows/dnaalnqc'
    description     = """ICGC-ARGO analysis workflow for post DNA alignment QC"""
    mainScript      = 'main.nf'
    nextflowVersion = '!>=22.10.1'
    version         = '1.0dev'
    doi             = ''
}

// Load modules.config for DSL2 module specific options
includeConfig 'conf/modules.config'

// Function to ensure that resource requirements don't go beyond
// a maximum limit
def check_max(obj, type) {
    if (type == 'memory') {
        try {
            if (obj.compareTo(params.max_memory as nextflow.util.MemoryUnit) == 1)
                return params.max_memory as nextflow.util.MemoryUnit
            else
                return obj
        } catch (all) {
            println "   ### ERROR ###   Max memory '${params.max_memory}' is not valid! Using default value: $obj"
            return obj
        }
    } else if (type == 'time') {
        try {
            if (obj.compareTo(params.max_time as nextflow.util.Duration) == 1)
                return params.max_time as nextflow.util.Duration
            else
                return obj
        } catch (all) {
            println "   ### ERROR ###   Max time '${params.max_time}' is not valid! Using default value: $obj"
            return obj
        }
    } else if (type == 'cpus') {
        try {
            return Math.min( obj, params.max_cpus as int )
        } catch (all) {
            println "   ### ERROR ###   Max cpus '${params.max_cpus}' is not valid! Using default value: $obj"
            return obj
        }
    }
}
