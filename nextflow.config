/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    icgc-argo-workflows/dnaalnqc Nextflow config file
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Default config options for all compute environments
----------------------------------------------------------------------------------------
*/

// Global default params, used in configs
params {

    // TODO nf-core: Specify your pipeline's command line flags
    // Input options
    input                      = null
    local_mode                 = false
    study_id                   = null
    analysis_ids               = null
    qc_analysis_ids            = null
    target                     = false
    //[gatk_contamination, samtools_stats, oxog, mosdepth, verifybamid2, collect_multiple_metrics, collect_hs_metrics, collect_wgs_metrics]
    skip_tools                 = "mosdepth,verifybamid2"  
    aws_no_sign_request        = false
    cleanup                    = false
    no_intervals               = false
    nucleotides_per_second     = 200000

    // Reference options
    reference_base             = null
    fasta                      = null
    fasta_fai                  = null
    fasta_dict                 = null
    germline_resource          = null
    germline_resource_tbi      = null
    bait_interval              = null
    target_interval            = null
    verifybamid2_ud            = "${projectDir}/assets/verifybamid/1000g.phase3.100k.b38.vcf.gz.dat.UD"
    verifybamid2_bed           = "${projectDir}/assets/verifybamid/1000g.phase3.100k.b38.vcf.gz.dat.bed"
    verifybamid2_mu            = "${projectDir}/assets/verifybamid/1000g.phase3.100k.b38.vcf.gz.dat.mu"
    autosome_non_gap           = "${projectDir}/assets/autosomes_non_gap_regions.bed"

    // rdpc data staging 
    tempdir                    = null
    api_token                  = null
    api_download_token         = null
    api_upload_token           = null
    song_url                   = null
    score_url                  = null
    song_url_download          = null
    score_url_download         = null
    song_url_upload            = null
    score_url_upload           = null
    transport_parallel         = null
    transport_mem              = null
    song_container             = "ghcr.io/overture-stack/song-client"
    song_container_version     = "5.0.2"
    score_container            = "ghcr.io/overture-stack/score"
    score_container_version    = "5.10.0"

    // Boilerplate options
    outdir                     = null
    tracedir                   = params.outdir ? "${params.outdir}/pipeline_info" : null
    publish_dir_mode           = 'copy'
    email                      = null
    email_on_fail              = null
    plaintext_email            = false
    monochrome_logs            = false
    hook_url                   = null
    help                       = false
    version                    = false
    validate_params            = true
    show_hidden_params         = false
    schema_ignore_params       = 'genomes'
    enable_conda               = false

    // Max resource options
    // Defaults only, expecting to be overwritten
    max_memory                 = '128.GB'
    max_cpus                   = 16
    max_time                   = '240.h'

   // MultiQC options
    multiqc_config             = null
    multiqc_title              = null
    multiqc_logo               = null
    max_multiqc_email_size     = '25.MB'
    multiqc_methods_description = null

}

plugins {
   id "nf-amazon"
}
 
if (params.aws_no_sign_request) {
    aws.client.anonymous = true
}
aws.client.downloadParallel = true
aws.client.maxConnections = 4
aws.batch.maxParallelTransfers = 8

if (params.cleanup) {
  cleanup = true
}

profiles {
    standard {
        docker.enabled         = true
        docker.userEmulation   = true
        docker.registry        = 'quay.io'
        docker.runOptions      = '-u \$(id -u):\$(id -g)'
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
    }
    singularity {
        singularity.enabled    = true
        singularity.autoMounts = true
        singularity.engineOptions = '-s'
        docker.enabled         = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
    }
    test            { includeConfig 'conf/test.config'      }
    test_rdpc_qa    { includeConfig 'conf/test_rdpc_qa.config'      }
    test_full       { includeConfig 'conf/test_full.config' }
    resource        { includeConfig 'conf/resource.config' }
    rdpc_qa         { includeConfig 'conf/rdpc_qa.config'  }
    rdpc_dev        { includeConfig 'conf/rdpc_dev.config'  }
    rdpc            { includeConfig 'conf/rdpc.config'  }
}

// Load base.config by default for all pipelines
includeConfig 'conf/base.config'

// Export these variables to prevent local Python/R libraries from conflicting with those in the container
// The JULIA depot path has been adjusted to a fixed path `/usr/local/share/julia` that needs to be used for packages in the container.
// See https://apeltzer.github.io/post/03-julia-lang-nextflow/ for details on that. Once we have a common agreement on where to keep Julia packages, this is adjustable.

env {
    PYTHONNOUSERSITE = 1
    R_PROFILE_USER   = "/.Rprofile"
    R_ENVIRON_USER   = "/.Renviron"
    JULIA_DEPOT_PATH = "/usr/local/share/julia"
}

// Enable locally defined binary scripts for modules
nextflow.enable.moduleBinaries = true

// Capture exit codes from upstream processes when piping
process.shell = ['/bin/bash', '-euo', 'pipefail']

def trace_timestamp = new java.util.Date().format( 'yyyy-MM-dd_HH-mm-ss')
timeline {
    enabled = params.tracedir ? true : false
    file    = "${params.tracedir}/execution_timeline_${trace_timestamp}.html"
}
report {
    enabled = params.tracedir ? true : false
    file    = "${params.tracedir}/execution_report_${trace_timestamp}.html"
}
trace {
    enabled = params.tracedir ? true : false
    file    = "${params.tracedir}/execution_trace_${trace_timestamp}.txt"
}
dag {
    enabled = params.tracedir ? true : false
    file    = "${params.tracedir}/pipeline_dag_${trace_timestamp}.html"
}

manifest {
    name            = 'DNA Alignment QC'
    author          = """Linda Xiang"""
    homePage        = 'https://github.com/icgc-argo-workflows/dnaalnqc'
    description     = """ICGC-ARGO analysis workflow for post DNA alignment QC"""
    mainScript      = 'main.nf'
    nextflowVersion = '!>=22.10.1'
    version         = '1.0dev'
    doi             = ''
}

// Load modules.config for DSL2 module specific options
includeConfig 'conf/modules.config'


